
workflow:
  # The rules below prevent "code-scanning-container" to spawn duplicated pipelines on MR.
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

include :
  - project: 'security-guild/code-scanning-container'
    file: code_scanning-gitlab-ci.yml



variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PIP_INDEX_URL: https://repository.engineering.redhat.com/nexus/repository/pypi.org/simple/
  REQUESTS_CA_BUNDLE: /etc/pki/tls/cert.pem


  # -- Settings for code_scanning
  PROJECT_NAME: "stratosphere_cloudpub"
  CODE_SCANNING_LANGUAGE: "Python"
  CODE_SCANNING_EXCLUSIONS: "tests/ms_azure/conftest.py"


.common: &common
  image: quay.io/redhat-aqe/tox:latest
  tags: [docker]
  cache:
    paths:
      - .cache/pip
  before_script:
    # Trust the IT Root CA.
    - curl https://password.corp.redhat.com/RH-IT-Root-CA.crt > /etc/pki/ca-trust/source/anchors/RH-IT-Root-CA.crt
    - update-ca-trust

stages:
    - linting
    - sanity
    - unit-tests
    - security
    - docs

lint:
  <<: *common
  stage: linting
  script:
    - tox -e lint

code_scanning:
  stage: security

mypy:
  <<: *common
  stage: linting
  script:
    - tox -e mypy

security:
  <<: *common
  stage: linting
  script:
    - tox -e security

python3.7:
  <<: *common
  stage: unit-tests
  coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/
  script: 
    - tox -e py37

python3.8:
  <<: *common
  stage: unit-tests
  script: 
    - tox -e py38

python3.9:
  <<: *common
  stage: unit-tests
  script: 
    - tox -e py39

python3.10:
  <<: *common
  stage: unit-tests
  script:
    - tox -e py310

azure schemas:
  <<: *common
  stage: sanity
  script:
    - schemas/check_schemas.sh

coverage:
  <<: *common
  coverage: /(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/
  stage: unit-tests
  script:
    - tox -e coverage
    - mkdir .coverage-reports
    - cp coverage.xml .coverage-reports/
  artifacts:
    paths: 
      - .coverage-reports

sonarqube-scan-sast:
  variables: 
    CODE_SCANNING_EXCLUSIONS: "tests/**,schemas/**,docs/**"
    PROJECT_NAME: $SONAR_PROJECT_KEY


# The stage below will deploy the documentation into GitLab pages whenever the main branch is updated
pages:
  <<: *common
  stage: docs
  script:
    - echo "Generating the GitLab pages..."
    - tox -e docs
    - mkdir public
    - cp -rf docs/_build/html/* public/
    - echo "The site will be deployed to $CI_PAGES_URL"
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
